package com.tosnos.cosa.binary.asm.value.JNI;


import com.tosnos.cosa.binary.asm.value.memory.Address;
import com.tosnos.cosa.binary.function.JNIFunction;
import com.tosnos.cosa.binary.asm.value.AbstractValue;
import com.tosnos.cosa.binary.asm.value.memory.AbstractMemory;

/**
 * Created by kevin on 12/28/14.
 */
public class JNIEnv extends Address {
    public static final int start = 0x8;
    public static AbstractMemory functions =  new AbstractMemory("ENV");

    public static JNIEnv env = new JNIEnv(start);

    static {
        functions.write(start + 0x10, JNIFunction.GetVersion);
        functions.write(start + 0x14, JNIFunction.DefineClass);
        functions.write(start + 0x18, JNIFunction.FindClass);
        functions.write(start + 0x1c, JNIFunction.FromReflectedMethod);
        functions.write(start + 0x20, JNIFunction.FromReflectedField);
        functions.write(start + 0x24, JNIFunction.ToReflectedMethod);
        functions.write(start + 0x28, JNIFunction.GetSuperclass);
        functions.write(start + 0x2c, JNIFunction.IsAssignableFrom);
        functions.write(start + 0x30, JNIFunction.ToReflectedField);
        functions.write(start + 0x34, JNIFunction.Throw);
        functions.write(start + 0x38, JNIFunction.ThrowNew);
        functions.write(start + 0x3c, JNIFunction.ExceptionOccurred);
        functions.write(start + 0x40, JNIFunction.ExceptionDescribe);
        functions.write(start + 0x44, JNIFunction.ExceptionClear);
        functions.write(start + 0x48, JNIFunction.FatalError);
        functions.write(start + 0x4c, JNIFunction.PushLocalFrame);
        functions.write(start + 0x50, JNIFunction.PopLocalFrame);
        functions.write(start + 0x54, JNIFunction.NewGlobalRef);
        functions.write(start + 0x58, JNIFunction.DeleteGlobalRef);
        functions.write(start + 0x5c, JNIFunction.DeleteLocalRef);
        functions.write(start + 0x60, JNIFunction.IsSameObject);
        functions.write(start + 0x64, JNIFunction.NewLocalRef);
        functions.write(start + 0x68, JNIFunction.EnsureLocalCapacity);
        functions.write(start + 0x6c, JNIFunction.AllocObject);
        functions.write(start + 0x70, JNIFunction.NewObject);
        functions.write(start + 0x74, JNIFunction.NewObjectV);
        functions.write(start + 0x78, JNIFunction.NewObjectA);
        functions.write(start + 0x7c, JNIFunction.GetObjectClass);
        functions.write(start + 0x80, JNIFunction.IsInstanceOf);
        functions.write(start + 0x84, JNIFunction.GetMethodID);
        functions.write(start + 0x88, JNIFunction.CallObjectMethod);
        functions.write(start + 0x8c, JNIFunction.CallObjectMethodV);
        functions.write(start + 0x90, JNIFunction.CallObjectMethodA);
        functions.write(start + 0x94, JNIFunction.CallBooleanMethod);
        functions.write(start + 0x98, JNIFunction.CallBooleanMethodV);
        functions.write(start + 0x9c, JNIFunction.CallBooleanMethodA);
        functions.write(start + 0xa0, JNIFunction.CallByteMethod);
        functions.write(start + 0xa4, JNIFunction.CallByteMethodV);
        functions.write(start + 0xa8, JNIFunction.CallByteMethodA);
        functions.write(start + 0xac, JNIFunction.CallCharMethod);
        functions.write(start + 0xb0, JNIFunction.CallCharMethodV);
        functions.write(start + 0xb4, JNIFunction.CallCharMethodA);
        functions.write(start + 0xb8, JNIFunction.CallShortMethod);
        functions.write(start + 0xbc, JNIFunction.CallShortMethodV);
        functions.write(start + 0xc0, JNIFunction.CallShortMethodA);
        functions.write(start + 0xc4, JNIFunction.CallIntMethod);
        functions.write(start + 0xc8, JNIFunction.CallIntMethodV);
        functions.write(start + 0xcc, JNIFunction.CallIntMethodA);
        functions.write(start + 0xd0, JNIFunction.CallLongMethod);
        functions.write(start + 0xd4, JNIFunction.CallLongMethodV);
        functions.write(start + 0xd8, JNIFunction.CallLongMethodA);
        functions.write(start + 0xdc, JNIFunction.CallFloatMethod);
        functions.write(start + 0xe0, JNIFunction.CallFloatMethodV);
        functions.write(start + 0xe4, JNIFunction.CallFloatMethodA);
        functions.write(start + 0xe8, JNIFunction.CallDoubleMethod);
        functions.write(start + 0xec, JNIFunction.CallDoubleMethodV);
        functions.write(start + 0xf0, JNIFunction.CallDoubleMethodA);
        functions.write(start + 0xf4, JNIFunction.CallVoidMethod);
        functions.write(start + 0xf8, JNIFunction.CallVoidMethodV);
        functions.write(start + 0xfc, JNIFunction.CallVoidMethodA);
        functions.write(start + 0x100, JNIFunction.CallNonvirtualObjectMethod);
        functions.write(start + 0x104, JNIFunction.CallNonvirtualObjectMethodV);
        functions.write(start + 0x108, JNIFunction.CallNonvirtualObjectMethodA);
        functions.write(start + 0x10c, JNIFunction.CallNonvirtualBooleanMethod);
        functions.write(start + 0x110, JNIFunction.CallNonvirtualBooleanMethodV);
        functions.write(start + 0x114, JNIFunction.CallNonvirtualBooleanMethodA);
        functions.write(start + 0x118, JNIFunction.CallNonvirtualByteMethod);
        functions.write(start + 0x11c, JNIFunction.CallNonvirtualByteMethodV);
        functions.write(start + 0x120, JNIFunction.CallNonvirtualByteMethodA);
        functions.write(start + 0x124, JNIFunction.CallNonvirtualCharMethod);
        functions.write(start + 0x128, JNIFunction.CallNonvirtualCharMethodV);
        functions.write(start + 0x12c, JNIFunction.CallNonvirtualCharMethodA);
        functions.write(start + 0x130, JNIFunction.CallNonvirtualShortMethod);
        functions.write(start + 0x134, JNIFunction.CallNonvirtualShortMethodV);
        functions.write(start + 0x138, JNIFunction.CallNonvirtualShortMethodA);
        functions.write(start + 0x13c, JNIFunction.CallNonvirtualIntMethod);
        functions.write(start + 0x140, JNIFunction.CallNonvirtualIntMethodV);
        functions.write(start + 0x144, JNIFunction.CallNonvirtualIntMethodA);
        functions.write(start + 0x148, JNIFunction.CallNonvirtualLongMethod);
        functions.write(start + 0x14c, JNIFunction.CallNonvirtualLongMethodV);
        functions.write(start + 0x150, JNIFunction.CallNonvirtualLongMethodA);
        functions.write(start + 0x154, JNIFunction.CallNonvirtualFloatMethod);
        functions.write(start + 0x158, JNIFunction.CallNonvirtualFloatMethodV);
        functions.write(start + 0x15c, JNIFunction.CallNonvirtualFloatMethodA);
        functions.write(start + 0x160, JNIFunction.CallNonvirtualDoubleMethod);
        functions.write(start + 0x164, JNIFunction.CallNonvirtualDoubleMethodV);
        functions.write(start + 0x168, JNIFunction.CallNonvirtualDoubleMethodA);
        functions.write(start + 0x16c, JNIFunction.CallNonvirtualVoidMethod);
        functions.write(start + 0x170, JNIFunction.CallNonvirtualVoidMethodV);
        functions.write(start + 0x174, JNIFunction.CallNonvirtualVoidMethodA);
        functions.write(start + 0x178, JNIFunction.GetFieldID);
        functions.write(start + 0x17c, JNIFunction.GetObjectField);
        functions.write(start + 0x180, JNIFunction.GetBooleanField);
        functions.write(start + 0x184, JNIFunction.GetByteField);
        functions.write(start + 0x188, JNIFunction.GetCharField);
        functions.write(start + 0x18c, JNIFunction.GetShortField);
        functions.write(start + 0x190, JNIFunction.GetIntField);
        functions.write(start + 0x194, JNIFunction.GetLongField);
        functions.write(start + 0x198, JNIFunction.GetFloatField);
        functions.write(start + 0x19c, JNIFunction.GetDoubleField);
        functions.write(start + 0x1a0, JNIFunction.SetObjectField);
        functions.write(start + 0x1a4, JNIFunction.SetBooleanField);
        functions.write(start + 0x1a8, JNIFunction.SetByteField);
        functions.write(start + 0x1ac, JNIFunction.SetCharField);
        functions.write(start + 0x1b0, JNIFunction.SetShortField);
        functions.write(start + 0x1b4, JNIFunction.SetIntField);
        functions.write(start + 0x1b8, JNIFunction.SetLongField);
        functions.write(start + 0x1bc, JNIFunction.SetFloatField);
        functions.write(start + 0x1c0, JNIFunction.SetDoubleField);
        functions.write(start + 0x1c4, JNIFunction.GetStaticMethodID);
        functions.write(start + 0x1c8, JNIFunction.CallStaticObjectMethod);
        functions.write(start + 0x1cc, JNIFunction.CallStaticObjectMethodV);
        functions.write(start + 0x1d0, JNIFunction.CallStaticObjectMethodA);
        functions.write(start + 0x1d4, JNIFunction.CallStaticBooleanMethod);
        functions.write(start + 0x1d8, JNIFunction.CallStaticBooleanMethodV);
        functions.write(start + 0x1dc, JNIFunction.CallStaticBooleanMethodA);
        functions.write(start + 0x1e0, JNIFunction.CallStaticByteMethod);
        functions.write(start + 0x1e4, JNIFunction.CallStaticByteMethodV);
        functions.write(start + 0x1e8, JNIFunction.CallStaticByteMethodA);
        functions.write(start + 0x1ec, JNIFunction.CallStaticCharMethod);
        functions.write(start + 0x1f0, JNIFunction.CallStaticCharMethodV);
        functions.write(start + 0x1f4, JNIFunction.CallStaticCharMethodA);
        functions.write(start + 0x1f8, JNIFunction.CallStaticShortMethod);
        functions.write(start + 0x1fc, JNIFunction.CallStaticShortMethodV);
        functions.write(start + 0x200, JNIFunction.CallStaticShortMethodA);
        functions.write(start + 0x204, JNIFunction.CallStaticIntMethod);
        functions.write(start + 0x208, JNIFunction.CallStaticIntMethodV);
        functions.write(start + 0x20c, JNIFunction.CallStaticIntMethodA);
        functions.write(start + 0x210, JNIFunction.CallStaticLongMethod);
        functions.write(start + 0x214, JNIFunction.CallStaticLongMethodV);
        functions.write(start + 0x218, JNIFunction.CallStaticLongMethodA);
        functions.write(start + 0x21c, JNIFunction.CallStaticFloatMethod);
        functions.write(start + 0x220, JNIFunction.CallStaticFloatMethodV);
        functions.write(start + 0x224, JNIFunction.CallStaticFloatMethodA);
        functions.write(start + 0x228, JNIFunction.CallStaticDoubleMethod);
        functions.write(start + 0x22c, JNIFunction.CallStaticDoubleMethodV);
        functions.write(start + 0x230, JNIFunction.CallStaticDoubleMethodA);
        functions.write(start + 0x234, JNIFunction.CallStaticVoidMethod);
        functions.write(start + 0x238, JNIFunction.CallStaticVoidMethodV);
        functions.write(start + 0x23c, JNIFunction.CallStaticVoidMethodA);
        functions.write(start + 0x240, JNIFunction.GetStaticFieldID);
        functions.write(start + 0x244, JNIFunction.GetStaticObjectField);
        functions.write(start + 0x248, JNIFunction.GetStaticBooleanField);
        functions.write(start + 0x24c, JNIFunction.GetStaticByteField);
        functions.write(start + 0x250, JNIFunction.GetStaticCharField);
        functions.write(start + 0x254, JNIFunction.GetStaticShortField);
        functions.write(start + 0x258, JNIFunction.GetStaticIntField);
        functions.write(start + 0x25c, JNIFunction.GetStaticLongField);
        functions.write(start + 0x260, JNIFunction.GetStaticFloatField);
        functions.write(start + 0x264, JNIFunction.GetStaticDoubleField);
        functions.write(start + 0x268, JNIFunction.SetStaticObjectField);
        functions.write(start + 0x26c, JNIFunction.SetStaticBooleanField);
        functions.write(start + 0x270, JNIFunction.SetStaticByteField);
        functions.write(start + 0x274, JNIFunction.SetStaticCharField);
        functions.write(start + 0x278, JNIFunction.SetStaticShortField);
        functions.write(start + 0x27c, JNIFunction.SetStaticIntField);
        functions.write(start + 0x280, JNIFunction.SetStaticLongField);
        functions.write(start + 0x284, JNIFunction.SetStaticFloatField);
        functions.write(start + 0x288, JNIFunction.SetStaticDoubleField);
        functions.write(start + 0x28c, JNIFunction.NewString);
        functions.write(start + 0x290, JNIFunction.GetStringLength);
        functions.write(start + 0x294, JNIFunction.GetStringChars);
        functions.write(start + 0x298, JNIFunction.ReleaseStringChars);
        functions.write(start + 0x29c, JNIFunction.NewStringUTF);
        functions.write(start + 0x2a0, JNIFunction.GetStringUTFLength);
        functions.write(start + 0x2a4, JNIFunction.GetStringUTFChars);
        functions.write(start + 0x2a8, JNIFunction.ReleaseStringUTFChars);
        functions.write(start + 0x2ac, JNIFunction.GetArrayLength);
        functions.write(start + 0x2b0, JNIFunction.NewObjectArray);
        functions.write(start + 0x2b4, JNIFunction.GetObjectArrayElement);
        functions.write(start + 0x2b8, JNIFunction.SetObjectArrayElement);
        functions.write(start + 0x2bc, JNIFunction.NewBooleanArray);
        functions.write(start + 0x2c0, JNIFunction.NewByteArray);
        functions.write(start + 0x2c4, JNIFunction.NewCharArray);
        functions.write(start + 0x2c8, JNIFunction.NewShortArray);
        functions.write(start + 0x2cc, JNIFunction.NewIntArray);
        functions.write(start + 0x2d0, JNIFunction.NewLongArray);
        functions.write(start + 0x2d4, JNIFunction.NewFloatArray);
        functions.write(start + 0x2d8, JNIFunction.NewDoubleArray);
        functions.write(start + 0x2dc, JNIFunction.GetBooleanArrayElements);
        functions.write(start + 0x2e0, JNIFunction.GetByteArrayElements);
        functions.write(start + 0x2e4, JNIFunction.GetCharArrayElements);
        functions.write(start + 0x2e8, JNIFunction.GetShortArrayElements);
        functions.write(start + 0x2ec, JNIFunction.GetIntArrayElements);
        functions.write(start + 0x2f0, JNIFunction.GetLongArrayElements);
        functions.write(start + 0x2f4, JNIFunction.GetFloatArrayElements);
        functions.write(start + 0x2f8, JNIFunction.GetDoubleArrayElements);
        functions.write(start + 0x2fc, JNIFunction.ReleaseBooleanArrayElements);
        functions.write(start + 0x300, JNIFunction.ReleaseByteArrayElements);
        functions.write(start + 0x304, JNIFunction.ReleaseCharArrayElements);
        functions.write(start + 0x308, JNIFunction.ReleaseShortArrayElements);
        functions.write(start + 0x30c, JNIFunction.ReleaseIntArrayElements);
        functions.write(start + 0x310, JNIFunction.ReleaseLongArrayElements);
        functions.write(start + 0x314, JNIFunction.ReleaseFloatArrayElements);
        functions.write(start + 0x318, JNIFunction.ReleaseDoubleArrayElements);
        functions.write(start + 0x31c, JNIFunction.GetBooleanArrayRegion);
        functions.write(start + 0x320, JNIFunction.GetByteArrayRegion);
        functions.write(start + 0x324, JNIFunction.GetCharArrayRegion);
        functions.write(start + 0x328, JNIFunction.GetShortArrayRegion);
        functions.write(start + 0x32c, JNIFunction.GetIntArrayRegion);
        functions.write(start + 0x330, JNIFunction.GetLongArrayRegion);
        functions.write(start + 0x334, JNIFunction.GetFloatArrayRegion);
        functions.write(start + 0x338, JNIFunction.GetDoubleArrayRegion);
        functions.write(start + 0x33c, JNIFunction.SetBooleanArrayRegion);
        functions.write(start + 0x340, JNIFunction.SetByteArrayRegion);
        functions.write(start + 0x344, JNIFunction.SetCharArrayRegion);
        functions.write(start + 0x348, JNIFunction.SetShortArrayRegion);
        functions.write(start + 0x34c, JNIFunction.SetIntArrayRegion);
        functions.write(start + 0x350, JNIFunction.SetLongArrayRegion);
        functions.write(start + 0x354, JNIFunction.SetFloatArrayRegion);
        functions.write(start + 0x358, JNIFunction.SetDoubleArrayRegion);
        functions.write(start + 0x35c, JNIFunction.RegisterNatives);
        functions.write(start + 0x360, JNIFunction.UnregisterNatives);
        functions.write(start + 0x364, JNIFunction.MonitorEnter);
        functions.write(start + 0x368, JNIFunction.MonitorExit);
        functions.write(start + 0x36c, JNIFunction.GetJavaVM);
        functions.write(start + 0x370, JNIFunction.GetStringRegion);
        functions.write(start + 0x374, JNIFunction.GetStringUTFRegion);
        functions.write(start + 0x378, JNIFunction.GetPrimitiveArrayCritical);
        functions.write(start + 0x37c, JNIFunction.ReleasePrimitiveArrayCritical);
        functions.write(start + 0x380, JNIFunction.GetStringCritical);
        functions.write(start + 0x384, JNIFunction.ReleaseStringCritical);
        functions.write(start + 0x388, JNIFunction.NewWeakGlobalRef);
        functions.write(start + 0x38c, JNIFunction.DeleteWeakGlobalRef);
        functions.write(start + 0x390, JNIFunction.ExceptionCheck);
        functions.write(start + 0x394, JNIFunction.NewDirectByteBuffer);
        functions.write(start + 0x398, JNIFunction.GetDirectBufferAddress);
        functions.write(start + 0x39c, JNIFunction.GetDirectBufferCapacity);
        functions.write(start + 0x3a0, JNIFunction.GetObjectRefType);
    }

    private JNIEnv(int offset) {
        super(functions, offset);
    }

    public AbstractValue getReplacement(Number value) {
        return new JNIEnv(value.intValue());
    }
}
